Как я взломал пул для майнинга Bitcoin moskowsky Сегодня веб сайты работающие с криптовалютами являются очень вкусной мишенью для хакеров И вроде бы их безопасность должна быть на высоком уровне но это далеко не всегда так Посмотрите хотя бы на где видно как крупнейшие сервисы банкротятся и закрываются в результате хакерских атак Меня это воодушевило и я решил провести собственное исследование безопасности одного из таких веб приложений В этой статье я расскажу что из этого получилось и сколько мне заплатили Интересно Добро пожаловать под кат Итак я посетил ViaBTC Pool один из крупнейших пулов для совместного майнинга Выбор был случайным и базировался на диаграмме ниже Я зарегистрировал аккаунт привязал телефон и подключил двухфакторную аутентификацию через Google Authenticator Также была включена опция Authenticate When Sign In ViaBTC 2fa при входе Вот так выглядел аккаунт потенциальной жертвы Поехали В данном случае если пользователь веб приложения посетит вредоносный сайт то его email изменится на адрес атакующего Работает это так Великолепно Почта успешно привязалась и атакующий автоматически залоггинился в аккаунте жертвы Но влажные фантазии нашего воображаемого хакера о несметных криптобогатствах прерв т тот самый редирект ту хоум Да это окно втрого шага аутентификации 2fa при входе помните Далее была обнаружена критическая уязвимость в реализации двухфакторной аутентификации Некоторые функции веб приложения требовали подтверждение вторым фактором аутентификации только во фронтенде Если отправить запрос непосредственно на бэкенд то он будет успешно выполнен без надлежащей аутентификации Таким образом атакующий способен отключить двухфакторную аутентификацию при входе несмотря на то что он не прош л ту самую двухфакторную аутентификацию что несомненно является Смотрите сами Что ещ можно было сделать отправляя запрос непосредственно на сервер Давайте вспомним первую уязвимость где браузер жертвы сам отправил запрос на смену email a Если пользователю необходимо изменить email то фронтед запросит подтверждение через второй фактор аутентификации Но если отправлять запрос напрямую то подтверждение не требуется Из за такого недостатка безопасности атакующий и смог изменить email используя CSRF На данном этапе атакующий получил доступ в аккаунт и к его конфиденциальной информации Но такие важные операции как например смена пароля вс ещ защищены двухфакторной аутентификацией Веб приложение разрешает использовать два метода подтверждения операций SMS код или код из Google Authenticator Но я обнаружил ещ один метод email код Я обратил внимание на процесс подтверждения операции через SMS Он состоит из запроса на отправку кода и запроса на подтверждение используя полученный код Выглядит это так В этом запросе было бы неплохо изменить sms на email подумал я А здесь логично sms_code на email_code Да у атакующего нет доступа к SMSкам жертвы И да у него нет доступа к аккаунту Google Authenticator жертвы Но у него есть доступ к email у он был привязан к аккаунту благодаря CSRF Итак финальные шаги Вот таким нехитрым образом злоумышленник завладел аккаунтом обычного пользователя веб приложения Цепочка уязвимостей позволяет полностью украсть аккаунт что конечно же критично Тем не менее уязвимости исправить не сложно Но если смотреть глубже эти уязвимости просто симптомы по которым можно диагностировать Главное это не просто исправить те несколько уязвимостей что я обнаружил Важно смотреть в корень проблемы Техническая команда должна сделать выводы и постоянно улучшать их знания в области безопасности Да возможно эта мысль банальна и очевидна Но мы каждый месяц наблюдаем громкие заголовки о взломе очередной криптобиржи Забавно то что это вроде бы как новые технологии с огромными рисками миллионы денег которые могут безвозвратно покинуть ваш кошел к но вс те же разработчики которые не знают что такое CSRF Я вс UPD Заплатили 1 BTC По курсу на тот момент около 18 000
