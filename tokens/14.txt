Знакомство с ConcourseCI w32blaster Всем привет Я заметил что на Хабре очень мало информации про такой сервер сборки как ConcourseCI Я решил восполнить этот пробел и написать небольшое введение Под катом описание этого инструмента и небольшой туториал Итак ConcourseCI это сервер сборки CI CD Разрабатывается он компанией Pivotal в данный момент находится в стадии активной разработки В самой комании есть несколько человек которые работают на полную ставку целиком на этом проекте так что новые версии на данный момент выпускаются довольно регулярно дополнительные фичи внедряются активно и баги исправляются быстро Изначально как это чаще всего бывает Pivotal сделали этот инструмент для внутреннего использования потому что были неудовлетворены Дженкинсом но в последствии опубликовали этот проект на Гитхабе и сообщество подтянулось в релизах часто встречается новый функционал от сторонних разработчиков из сообщества Написан целиком на языке Go В этой статье Достоинства Установка Три концепции Внешний вид вэб интерфейса Fly Конфигурация конвейера Секреты Зачем нужны таски Достоинства Перечислю основные достоинства этого продукта каждая операция запускается в отдельном Docker контейнере что делает этот продукт абсолютно независимым от технологии То есть собирать можно любой код который собирается внутри какого либо докер контейнера процесс сборки описывается в форме т н pipeline конвейере потому что современная сборка вс реже становится линейной И описать сложную процедуру сборки в виде такого графика становится очень удобно и наглядно ConcourseCI поставляется с удобным графическим веб интерфейсом который используется только для чтения Хотя на данный момент запущен новый дизайн в бета режиме он активно обсуждается сообществом так что мои скриншоты вероятно устареют в ближайшем будущем Новый интерфейс возможно будет выглядеть примерно вот так из коробки легко расширяется горизонтально Если у вас не хватает ресурсов вы можете запустить ещ один воркер на новой машине указать в качестве параметров адрес главного сервера и вс остальное сделается за вас воркер сам себя зарегистрирует сообщит о себе и уже сразу же будет готов выполнять какую то работу Более того если у вас есть в процессе сборки какие то параллельные операции то они вполне могут бежать на разных физических машинах Операция добавления нового воркера это буквально запуск одной команды Установка Как я упоминал проект написан на Go поэтому релиз поставляется единым бинарным файлом и его можно запустить одной командой Но есть способ лучше ConcourseCI предоставляет официальный докер образ так что можно запустить проект всего одной командой используя уже docker compose Запущенный ConcourseCI состоит из тр х частей PostgreSQL база данных Concourse Web Это что то вроде мастера Тут работает графический вэб интерфейс и самое главное ATC термин ATC или Air Traffic Control позаимствован из авиации это вышка управления пол тами которая стоит в аэропортах у взл тно посадочной полосы где диспетчеры руководят пол тами самол тов ATC распределяет ресурсы запускает разные задачи следит за кластером Важно помнить что реальная сборка не происходит в Concourse Web он только лишь руководит сборкой делегируя задачи доступным воркерам В системе может быть только один главный Concourse Web Concourse Worker вот тут то и происходит реальная работа Воркер получает задания от ATC и выполняет его отчитавшись о своих результатах Таких воркеров может быть в системе столько на сколько у вас хватит железа Рекомендуется запускать один воркер на один сервер инстанс Таким образом полностью рабочий сервер можно запустить всего одной docker compose командой Но перед самым первым запуском вам следует сгенерировать ключи потому что ATC общается с воркерами по зашифрованному каналу и необходимо обоим сторонам подсунуть ключи перед запуском Генерируем ключи вот так Ну и после этого мы сможем запустить всю систему вот с таким файлом Не забудьте экспортировать в переменную CONCOURSE_EXTERNAL_URL реальное значение вэб адреса на котором будет доступен вэб интерфейс Как видите в этом примере мы запускаем вс на одной машине но никто вас этим не ограничивает и можно смело создавать распредел нный кластер согласно своим потребностям После запуска можете открыть в браузере адрес вашего сервера в примере выше http 192 168 99 100 8080 и вы увидите пока ещ пустой Concourse Web Подробнее про установку тут Три концепции Итак прежде чем перейти к делу давайте разбер мся с терминологией чтобы понимать друг друга ConcourseCI оперирует тремя основными понятиями Resource ресурс который может предоставлять материал для сборки или может быть обновл н результатами сборки Типичные примеры git hg репозитории докер регистри FTP S3 чаты емайлы телеграм боты и проч Полный список тут плюс можно всегда что то найти на просторах ГитХаба и на крайний случай можно написать самому Важно понимать что ресурс не делает никакой конкретной работы он всего лишь предоставляет материал для дальнейших действий Task это единица работы которая может быть сделана в рамках вашей сборки Таск запускается в выбранном вами докер контейнере Job задание объединяет ресурсы и таски в одно целое Иными словами внутри задания мы бер м ресурсы как то обрабатываем в тасках собираем и обновляем ресурсы результатами Одна задача полностью изолирована и может быть запущена отдельно сколько угодно раз Внешний вид вэб интерфейса И в браузере ConcourseCI выглядит примерно так Это очень простой пример для конвейера но тут видно как мы бер м исходники из Гит репозитория и запускаем сборку проекта созда м докер образ и оповещаем всех в телеграм канале с помощью соотвествующего ресурса На данном скриншоте видны только ресурсы и задача но не видны таски Но если нажать на одну из задач в этом примере у нас она одна то можно увидеть что творится внутри зел ного квардрата На данном снимке цифрами отмечены кнопка ручного запуска задачи Вы е можете запустить ещ раз в любой момент времени все предыдущие билды выстраиваются в длинную цепочку под заголовком в виде истории ресурс который бер т исходники Стрелочка вниз означает get то есть мы забираем из ресурса материал вывод работы одного таска Можно раскрыть эту ссылку и увидеть лог stdout из нашего контейнера что происходило во время сборки нашего проекта мы собираем ресурс докер образ и забрасываем его в приватный регистри Стрелочка наверх означает put то есть мы обновляем ресурс наконец кидаем сообщение в приватный телеграм канал В этом интерфейсе можно просматривать все конвейеры и таски следить за результами В качестве примера совсем продвинутой версии конвейера можно привести конвейер самого ConcourseCI да как ни удивительно но сам он собирается им же самим Но как я уже упоминал выше вэб тут только для чтения Возникает резонный вопрос а как же тогда добавлять новые конвейеры в проект Настало время представить вам fly Fly Fly это утилита командной строки которая позволяет управлять всем вашим кластером ConcourseCI из терминала Ставится на ваш рабочий компьютер и упралвяет сервером С ней вы можете совершать все необходимые операции и обслуживать кластер Вывод справки по данной команде малая часть Команда из себя представляет так же один бинарник написан на Go Его можно скачать с гитхаба но удобнее будет скачать воспользовавшись ссылкой внизу вэб интерфейса и закинуть в usr bin fly сделав его запускаемым Итак вы установили fly Для начала работы c ConcourseCI необходимо пройти аутентификацию в ваш сервер Делается это весьма просто
