Throw выражения в C 7 JosefDzeranov Всем привет Продолжаем исследовать новые возможности C 7 Уже были рассмотрены такие темы как Сегодня поговорим про В C всегда был оператором Поскольку это оператор а не выражение существуют конструкции в C в которых нельзя использовать его Чтобы исправить данные проблемы C 7 вводит выражения Синтаксис остался таким же как всегда использовался для операторов throw Единственное различие заключается в том что теперь их можно использовать в большом количестве случаев Давайте рассмотрим в каких местах будет лучше использовать Поехали До 7 версии языка C использование в тернарном операторе запрещалось так как он был В новой версии С используется как следовательно мы можем добавлять его в тернарный оператор Ссылка на объект не указывает на экземпляр объекта и Объект должен иметь значение являются двумя наиболее распространенными ошибками в приложениях C С помощью выражений легче дать более подробное сообщение об ошибке В процессе борьбы с ошибками проверок на в логах можно видеть наиболее распространенное и бесполезное сообщение об ошибке Последовательность не содержит элементов С появлением программисты C часто используют методы и чтобы найти элемент в списке или запросе Несмотря на то что эти методы являются краткими при возникновении ошибки не дают детальной информации о том какое утверждение было нарушено выражения обеспечивают простой шаблон для добавления полной информации об ошибках без ущерба для краткости В C 7 шаблоны типа предлагают новые способы приведения типов С помощью выражений можно предоставить конкретные сообщения об ошибках выражения предлагают наиболее сжатый способ реализовать метод с выбросом ошибки Хорошо управляемые классы бросают на большинство операций после их удаления выражения могут сделать эти проверки более удобными и менее громоздкими обеспечивает идеальную настройку чтобы сочетать многие из вышеупомянутых способов использования С тех пор как он был выпущен в третьей версии C изменил стиль программирования на C в сторону ориентированного на выражения а не на операторы Исторически часто заставлял разработчиков делать компромиссы между добавлением значимых утверждений и исключений их из кода оставаясь в синтаксисе сжатого выражения который лучше всего работает с выражениями выражения решают эту проблему Также выражения хорошо подходят при написании неработающих методов и свойств заглушек которые планируются покрыть с помощью тестов Поскольку эти члены обычно бросают можно сэкономить некоторое место и время Всем лень писать столько строчек кода для проверки теперь если использовать возможности C 7 можно написать выражения Это позволит вам переписать такой код Также следует сказать что можно использовать не только в конструкторе но и в любом методе Throw выражения также позволяют сделать свойства объектов более короткими Можно сделать еще короче используя оператор или даже использовать тело выражения для методов доступа геттер сеттер Давайте посмотрим во что разворачивается данный код компилятором Как мы видим компилятор сам привел к той версии которую мы писали в самом начале пункта Следовательно не надо писать лишний код компилятор сделает это за нас выражения помогают писать меньший код и использовать исключения в выражениях членах Это всего лишь языковая функция а не что то основное в языковой среде исполнения Хотя выражения помогают писать более короткий код это не серебряная пуля или лекарство от всех болезней Используйте выражения только тогда когда они могут вам помочь
