простой stack fragment morkovkin добрый время сутки уважаемый читатель хабра хотеть представить ваш внимание статья основать на мыть опыт работа в single activity architecture в частность с стек пользовательский представление при первое знакомство с single activity architecture у я возникать много вопрос как можно управлять момент добавление и удаление фрагмент как фрагмент удерживать нажатие кнопка назад возможно ли запускать фрагмент на результат как понять когда пользователь вернуться на фрагмент и тд один вопрос являться почти тривиальный можно создать единый класс навигация в который передавать менеджер фрагмент и использовать по функция переход на экран два вопрос тоже частично решаться оповещение класс навигация о тот что произойти нажатие на кнопка назад но в это случай навигатор начинать являться чем то больший чем просто хранитель путь в немой появляться логика который на мой взгляд абсолютно не оправдать но кто то в система должный обрабатывать движение вперёд и назад с возвращение пользователь на фрагмент тоже есть некоторый сложность один из самый критичный на мой взгляд это повторный вызов oncreateview как мы весь знать там появляться пользовательский представление в вид view думать также ни для кто не секрет что этот операция являться довольно прожорливый по итог получаться класс с больший количество логика переход создание фрагмент различный род сомнительный вставка очень полезный функциональность в метод обработка переход назад если пользователь добавить что то на предыдущий экран нужно это добавить в список по мой мнение это не совсем то что требоваться от класс который отвечать за навигация внутри приложение разумный решение это делегировать часть функционал другой часть система такой образ в мой программа появиться сущность стек фрагмент требование к стечь фрагмент почти тривиальный добавить фрагмент перейти назад перейти до за исключение некоторый нюанс для я как для проектировщик основной проблема стать жизненный цикл добавлять удалять фрагмент также некий проблема быть завершение фрагмент с результат и отправка результат он потребитель благо решение найтись довольно быстро внутренний логический структура я выбрать немного усовершенствовать стек слоёный пирог идея заключаться в тот что слоить укладываться на корж корж наш абстрактный пирог можно считать точка вход в приложение главный фрагмент домашний страница и том далее слоить же в свой очередь иметь следующий свойство если отойти от сладкое пример то добавление это транзакция состоять из скрытие предыдущий фрагмент и добавление новое также в этот операция я добавить оповещение скрывать фрагмент о тот что пользователь с он уйти и ограничение на размер стек операция удаление являться более витиеватый поэтому о весь более подробно логика который отвечать за отправка результат из фрагмент поставщик к фрагмент разумно вынести в отдельный класс например воображать экран добавление запись в ежедневник пользователь мочь бы возвращать добавить запись для последующий она обработка вызывать блок программа это некий аналог onactivityresult если представить весь вышесказанный на схема то она быть выглядеть следующий образ для обеспечение результативность я создать отдельный класс resultutils и интерфейс resultablefragment потребитель мочь являться люба фрагмент который расширять интерфейс resultablefragment данный интерфейс состоять из один функция void onfragmentresult final int requestcode final int resultcode final bundle data дать функция являться аналог onactivityresult реализация класс представлять из себя набор следующий метод также я потребоваться интерфейс который объединять весь фрагмент подчиняться новый жизненный цикл данный интерфейс я назвать lifeboundfragment туда включить следующий метод прорабатывать внешний интерфейс стек я выделить следующий основной функция сам стек я организовать на структура linkedlist наиболее интересный с мой точка зрение являться метод push final t target final int requestcode pop и poptotarget class target как упоминаться ранее данный метод добавлять новый фрагмент на экран скрывать предыдущий и добавлять в новый ключ для тот чтобы скрыть внутренний реализация я создать приватный метод который отвечать за весь логика добавление и удаление фрагмент метод pushfragment возвращать pair fragment fragment это по суть направление движение где ключ это фрагмент с который пользователь переходить а значение куда по задумка при добавление фрагмент мы должный оповестить фрагмент который скрываться о тот что пользователь с он уходить для это достаточно убедиться что скрывать фрагмент расширять интерфейс и отправить событие также в это метод стоить добавить обязательство через класс утилит resultutils использовать метод addpromise наиболее интересный тут являться метод pushfragment в дать метод происходить весь основный манипуляция с стек скрытие предыдущий фрагмент и ограничение на кола в элемент стек метод pop также являться некий собирательный метод особенность это метод являться вызов sendresultifpossible класс resultutils основный логика метод popfragment вполне предсказуемый так что особо на она задерживаться смысл я не видеть данный метод по мой мнение являться самый интересный он сочетать в себя практически весь когда я начать разрабатывать функционал класс resultutils один мой внутренний ограничение быть то что результат при переход назад передаваться по цепочка исходить из это ограничение метод onfragmentresult быть вызываться по цепочка до тот пора пока не наткнуться на корнев вызов фрагмент находиться посередине цепочка я начать называть транзитный действительно они получать вызов onfragmentresult в который мочь установить результат для следующий фрагмент цепь по мой мнение получиться гибкий простой и надёжный система управление фрагмент в данный момент я удаться успешно применить этот подход в ряд проект в который я участвовать из минус с который я столкнуться при использование это подход это leanback android tv но отчасти сам система не располагать к single activity architecture далее я планировать придумать механизм хранение восстановление история запуск приложение с задать история быть полезно при push нотификация спасибо за внимание

