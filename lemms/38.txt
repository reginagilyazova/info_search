разработка игра под nes на c глава 4 6 рисовать персонаж bubavv в этот часть рассмотреть работа с графика фон и спрайт персонаж следующий ppu графический процессор мочь или отправлять сигнал в телевизор или получать информация от процессор но не одновременно так что единственный время для пересылка это v blank период кадровый гасить импульс 90 время ppu отправлять пиксель в видеовыход строка за строка слева направо и сверху вниз внизу экран делаться пауза и весь повторяться снова это происходить 60 раз в секунда пауза после отрисовка кадр и есть v blank это весьма короткий промежуток время в он реально вложить обновление 2 4 столбцы фоновый тайлов и обновление спрайт обновление фон особенно критично для игра с прокрутка есть два способ узнать о наступление v blank в один ppu выставлять флаг в старший бит регистр 2002 в второе вызываться немаскируемый прерывание nmi и происходить переход по задать адрес вектор прерывание он можно использовать для работа с ppu контроль тайминг музыка перемещение спрайт интервал между вызов nmi составлять 1 60 секунда и он можно использовать для отсчёт время в игра сейчас мы написать программа который быть выводить hello world по 1 буква каждый 30 кадр после вывод весь фраза очистить экран и повторить весь по круг обратить внимание на фрагмент в файл reset s это код обработчик немаскируемый прерывание который фактически реализовать счётчик кадр в глобальный переменный каждый кадр выставлять флаг nmi_flag и в случай если прошлый 30 кадр 0 5 секунда выводиться спрайт очередной буква весь логика реализовать в main исходный код и в идеал надо ждать v blank перед вызов all_on иначе один кадр после он быть быть искажённый и экран быть мерцать в это пример этот эффект незаметный потому что all_on вызываться единственный раз при старт приставка экран в это время чёрный и искажение незаметно теперь можно раскрасить то что получиться пара слово о палитра в nes в память ppu под нея выделить 16 байт по адрес 3f00 3f0f для 4 палитра фон и 16 байт по адрес 3f10 3f1f для 4 палитра спрайт один цвета спрайт всегда отрисовываться как прозрачный а один цвета фон как цвета фон по умолчание байт в память ppu соответствующий один цвета зазеркалировать для весь 8 запись и соответствовать цвета фон по умолчание так что мы мочь использовать 3 уникальный цвет на спрайт и 3 цвет плюс общий фоновый для тайлов такой образ можно одновременно отрисовать 25 цветок из 50 возможный можно затемнить этот цвет через регистр color emphasis но этот функция совместимый не с весь клон приставка кроме тот некоторые телевизор срывать крыша от цветок 0d и 1d они получаться чёрный чёрный а это нештатный ситуация использовать цвет xf для фон палитра определяться для блок из 2х2 тайлов размер 16х16 точка для этот разбивка удобно использовать nes screen tool большинство игра строить фон именно из такой счетверить метатайлов в каждый таблица имя фактически заготовка для рендеринг экран выделить 64 байт под атрибут например для таблица 0 использоваться адрес ppu 2000 23ff а атрибут храниться в 23c0 23ff каждый байт атрибут описывать 4 метатайла то есть область 32х32 пиксель соответственно 2 битый выбирать номер палитра для метатайла соответствие битый метатайла такой здесь один буква соответствовать один тайла малый квадрат метатайла 2х2 то есть чтобы поменять палитра правый нижний квадрант на один из 4 возможный надо поменять два старший битый атрибут на 01 01хххххха я добавить к прошлое пример палитра так что буква тепеь разноцветный палитра вынести в отдельный файл и импортироваться через include а переменный определить в нулевой страница память через pragma просто для демонстрация этот фич нулевой страница работать быстрый но 10 20 переменный там использоваться для внутренний нужда компилятор так что надо рассчитывать где то на 235 доступный байт исходный код и вот полезный шпаргалка по адрес таблица атрибут и она привязка к экранный координата экран ширина 256 точка каждый клетка таблица соответствовать квадрат 32х32 спрайт это картинка 8х8 который мочь перемещаться по экран есть хитрый способ использовать спрайт 8х16 но мы так делать не быть почти весь персонаж игра состоять из спрайт хотя в некоторый случай нужно отрисовывать они фоновый тайла из за ограничение на количество спрайт такой использоваться для финальный босс в некоторый игра 8х8 точка это очень мало поэтому прийтись собирать персонаж из несколько спрайт маленький марио из 2х2 а большой из 2х4 надо помнить о ограничение поддерживаться не большой 64 спрайт и не более 8 на один строка экран при превышение лимит быть отрисовать только спрайт с больший приоритет если менять приоритет спрайт между кадр он быть мигать этот способ часто использоваться в игра ppu хранить информация о спрайт в таблица oam она размер 256 байт по 4 байт на каждый из 64 возможный спрайт если накладываться два спрайт с одинаковый приоритет то спрайт с меньший номер отрисовываться поверх если на один строка экран быть большой 8 спрайт то отрисоваться только 8 с меньший номер таблица oam хранить такой атрибут координата считаться по левый верхний угол x мочь быть от 00 до f8 y от 00 до ee можно частично спрятать спрайт вниз или вправо от экран но левый и верхний граница неприкосновенный в наш пример код инициализация прятать спрайт внизу y f8 как весь это храниться в память правда здесь таблица спрайт храниться в ram по адрес 700 а в пример использоваться 200 запись в таблица oam реализовать через регистр память надо записать адрес спрайт в 2003 а потом дать для он в 2004 это редко пользоваться потому что есть более удобный и быстрый способ заливка через dma он активироваться через регистр 4014 писать xx по адрес 4014 256 байт из диапазон xx00 xxff сам заливаться в oam это надо делать в период v blank в наш пример мы сделать метаспрайт из 4 спрайт и добавить анимация надо помнить что спрайт отрисовываться на 1 точка ниже от ожидать координата на картинка с марио вверху пост видно что он на 1 пиксель уйти в половина есть немного улучшить версия где персонаж поворачиваться при движение по квадрат исходный код и

