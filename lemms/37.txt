разработка игра под nes на c глава 1 3 от введение до hello world bubavv впервые я задуматься о тот как разрабатывать игра под приставка где то через 20 минута после тот как в самый один раз увидеть turbo pascal на глаз иногда попадаться subor с клавиатура и появиться мысль наверное можно набрать какой то программа а потом в нея поиграть но интерес быстро затухнуть потому что абсолютно никакой информация по этот тема тогда не быть доступно следующий раз этот же идея всплыть когда увидеть вполне играбельный эмулятор старое консоль тогда стать ясно что вбивать листинг в сам консоль и необязательно где то очень потом появиться хабра с благожелательный аудитория для такой вещий в какой то момент даже начать собирать разрозненный инф чтобы написать мануал самый и вот сегодня наткнуться на готовый учебник который явно надо перевести разработка под старое консоль документировать вдоль и поперёк но именно по nes 99 информация относиться к разработка на ассемблер я почему то зарубить что надо освоить именно работа с с весь привет я звать дуга я писать игра для nes вот уже год и решить начать этот блог я намеренный написать туториал по разработка игра под nes чтобы вдохновить другой человек делать собственный игра особенность блог быть использование чистый с так что другой программист смочь начать писать быстро и не особо вникать в ассемблер для процессор 6502 насколько я известно другой туториал такой формат по компилятор cc65 пока нет кроме несколько пример игра на сайт также помнить что я не профессионал ни в разработка ни в ведение блог если возникнуть вопрос по nes скорее всего ответ найтись в я постараться максимально упростить обучение и использовать самый простой пример также рекомендовать начать с простой идея игра читатель явно захотеться сделать новый но это не получиться простой игра потребовать 2 3 месяц на разработка зелд 2 3 год такой проект скорее всего быть забросить ориентироваться на пакман хотя бы первое время поговорить о структура память у nes два независимый адресный пространство память процессор с диапазон 0 ffff и память ppu видеочип начать с память процессор более подробный информация у ppu свой независимый адресный пространство оно иметь размер 3fff но местами зеркалироваться доступ к он идти через регистр в память процессор видеопамять хватать на 4 экранный буфер но в подавлять большинство игра использоваться только 2 для реализация прокрутка таблица имя nametable связывать тайла фон и они позиция на экран зеркалирование позволять управлять горизонтальный или вертикальный прокрутка но весь свой время ещё в ppu есть отдельный область память oam object attribute memory размер 256 байт доступ к она реализовать через регистр в адресный пространство процессор и она позволять управлять отображение спрайт вот подробный информация по память ppu ещё один момент есть два тип картридж в некоторый два rom чип prg rom с исполняемый код и chr rom с графика в такой случай график автоматически отображаться в адрес 0 1fff ppu это позволять очень просто сделать отрисовка просто записать номер тайла в таблица мы быть использовать этот формат другой тип картридж использовать chr ram вместо chr rom это позволять подгрузить часть графика в этот дополнительный оперативный память это сложный техника и в это туториал не рассматриваться теперь можно посмотреть на софт использовать для разработка в это туториал рассматриваться только это один из хороший компилятор для 6502 процессор nes я использовать версия 2 15 для проверка ввести cc65 version в консоль файл из разный версия несовместимый поэтому при необходимость использовать nes lib из комплект ваш компилятор в второе надо создать график я использовать для предобработка графика нужный люба графический редактор photoshop или gimp по вкус код удобно писать в у он есть подсветка сишный синтаксис и нумерация строка это облегчать отладка а теперь эмулятор я использовать fceux 90 время потому что в немой есть крутой дебаггера и инструмент для работа с память просмотрщик спрайт и весь такой но он не самый точный в эмуляция игра надо быть тестировать где то ещё судить по отзыв самый точный эмулятор это nintendulator nestopia и punes ещё желательно подгрузить более точный палитра лежать есть два версия fceux sdl и win32 один работать почти везде два только в windows так вот отладчик есть только в два так что в случай альтернативный ос прийтись воспользоваться виртуалка или wine и наконец расстановщик тайлов мы мочь сделать игра без он но он точно помочь я рекомендовать он отлично показывать ограничение консоль по цвета и отлично подходить для одноэкранный игра для игра с прокрутка хороший подойти как же весь это пользоваться надо сжать изображение до адекватный размер например 128 пиксель в ширина потом преобразовать в 4 цвет и подправить при необходимость огрех теперь можно копипастить в yy chr в yy chr надо проверить чтобы цвета быть двухбитный палитра сейчас не иметь значение потому что она весь равно задаваться в друг место весь компилятор для nes работать через консоль без графический интерфейс то есть писать программа в блокнот а потом вызывать компилятор с нужный параметр дл упрощение работа быть использовать bat скрипт и makefile это позволить автоматизировать процесс и собирать образ картридж в один касание процесс примерно такой cc65 компилировать файл с код на с в ассемблерный код ca65 собирать объектный файл ld65 линковать он в образ картридж nes который можно запустить в эмулятор настройка храниться в cfg файл в приставка использоваться 8 битный процессор mos 6502 он не уметь просто обращаться к переменный большой 8 битый адресация 16 битный из математика есть только сложение вычитание и битовый сдвиг так что код прийтись писать с учёт этот фактор испольовать опция o для оптимизация есть ещё опция i r s который иногда комбинировать в oirs но они например мочь удалить чтение из регистр процессор значение который не использоваться а это фатально по использование компилятор оптимизация жизненно необходимый потому что у 8 битный процессор очень мало ресурс и в некоторый случай надо следить за время выполнение код а обычный код на с это требование не соответствовать поддерживаться импорт переменный из другой файл cc65 уметь импортировать переменный и массив из ассемблерный модуль команда а если это символ из нулевой страница память то добавить директива в дальнейший курс этот конструкция быть использоваться редко единственный исключение импорт большой бинарный файл в это случай оптимально быть завернуть он в ассемблерный файл а потом импортировать в с как знак _ здесь критичный потому что при компиляция в ассемблерный код cc65 добавлять _ перед каждый имя переменный мы надо это соответствовать можно вызывать функция написать на ассемблер через __fastcall__ в это случай аргумент передаться в функция через регистр а не стек экономить время в некоторый случай без ассемблерный код не обойтись например при инициализация приставка в любой случай чем маленький аргумент передаваться в функция тем хороший сравнимый два функция причём переменный test и a глобальный ещё можно вставлять ассемблерный код прямо в сишный я так почти никогда не делать но наверное иногда это необходимый выглядеть примерно так кроме тот я заменить громоздкий код инициализация crt0 s на компактный reset s и подправить конфигурация для всего это этот файл иногда быть меняться nes lib использоваться стандартный из состав компилятор проект собираться с опция add source который не удалять промежуточный ассемблерный файл можно порассматривать сгенерировать код удобный определить переменный в сишном код а потом импортировать в ассемблерный через но это вопрос вкус на мой взгляд такой код наглядный этот программа быть просто печатать текст на экран надо помнить что приставка вообще не знать про кодировка ascii и работа с текст в любой вид но зато есть возможность вывести картинка размер 8х8 поверх фон так что делать массив спрайт буква чтобы адрес буква в немой соответсвовать они ascii код потом они можно быть дёрнуть из код на с код инициализация приставка пока брать как есть после он выполнение происходить переход на main мы надо сделать такой операция выключение экран нужно потому что работа с видеопамять вызывать мусор на экран надо или выключить экран или ждать кадровый гасить импульс v blank детально этот вопрос мы рассмотреть в следующий раз код инициализация заполнять память нуль так что весь экран быть залить нулевой тайлом в наш случай он пустой а весь палитра заполнить серый цвет для вывод на экран надо записать координата начало заливка начинать с старший байт по адрес 2006 а потом записывать номер тайлов в 2007 ppu быть выводить тайла с соответствующий номер один за другой с переход на новый строка можно перенастроить ppu на шаг вывод равный 32 тайла быть выводиться один под другой мы же надо выставить шаг 1 через регистр 2000 пересчитать координата экран в адрес можно через nes screen tool мы также надо заполнить один 4 цвет палитра они отвечать за фон они записываться по адрес 3f00 запись в регистр ppu ломать положение прокрутка так что она тоже надо сбросить иначе картинка мочь уехать за экран мы делать это через регистр 2006 и 2005 ссылка на код на гитхаб чуть исправить makefile чтобы корректно работать под windows строка внутри секция segments в файл cfg нужный для совместимость с свежеть версия cc65 включение экран через ppumask 0x1e описать в весь файл здесь размер 0х4000 это самый маленький возможный размер prg rom 90 игра сюда не влезть и быть отображаться на адрес 8000 ffff у мы же игра загружаться в адрес c000 ffff и зеркалироваться в 8000 bfff для разработка больший игра надо быть перенастроить адрес начало rom на 8000 и выставить размер тоже 8000 а ещё включить два банк prg rom в секция header

