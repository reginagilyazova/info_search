руководство для практиковать специалист как читать научный статья по язык программирование m1rko неделя назад я пошутить что статья по принцип язык программирование popl должный соответствовать критерий интеллектуальный запугивание чтобы они принимать для публикация конечно это неправда но факт в тот что статья по язык программирование выглядеть особенно устрашающий для специалист практик или академик действительно работать в другой область компьютерный наука они битком набитый математический символ и такой фраза как суждение операционный семантика и тот подобный там много тонкий вариант запись но вы мочь в основное уловить быть статья усвоить несколько базовый понятие так что вместо рассказ о очередной научный статья я подумать что сегодня хороший написать краткий практический руководство по расшифровка научный стать на тема язык программирование здесь я следовать книга бенджамин пирс в качество авторитетный источник начн метр с понятный синтаксис синтаксис говорить какой предложение можно использовать в язык том е какой программа мы мочь писать синтаксис содержимый набор который представлять себя строительный блок возьма метр следующий пример из пирс всюду где встречаться символ можно подставить люба термы если в статья упоминаться термы то часто использоваться с подстрочный индекс для различие между разный термы например множество весь терм часто обозначаться как он не следовать путать с символ который традиционно использоваться для обозначение тип в вышепривед нном пример обратить внимание что сам по себя оператор не являться терм это токен в дать случай keyword токен терм являться условный выражение термы это выражение который можно вычислить и конечный результат вычисление в правильно построить окружение должный стать значение это подмножество терм в вышепривед нном пример значение являться а также значение который мочь быть создать путы метр последовательный применение операция к мы хотеть придать какой то значение термы язык это существовать различный способ определить значение программа чаща всего вы встретить упоминание и из они операционный семантика наиболее распространа нный она определять значение программа устанавливать правило для абстрактный машина который вычислять термы спецификация иметь форма набор рассмотреть они чуть поздний в это мировоззрение смысл терма это конечный состояние величина который достигать машина запустить с в е начальный состояние в в качество значение терма приниматься некий математический объект например число или функция в некоторый ранее существующий семантический область а функция интерпретация соотносить термы язык с они эквивалент в целевой область так что мы указывать что представлять или денотировать термы в этот область вы мочь также столкнуться с тем что автор упоминать операционный семантика с малое шагом small step и операционный семантика с больший шагом big step как следовать из название это относиться к тот насколько большой скачок делать абстрактный машина с каждый применять правило в семантика с малое шагом термы переписываться постепенно по один маленький шаг за раз пока в конечный итог не стать значение в семантика с больший шагом она же естественный семантика мы мочь перейти от терма к он окончательный значение за один шаг в запись семантика с малое шагом вы увидеть что нибыть такой что следовать читать так что вычисляться в вместо подстрочный индекс мочь использоваться штрих например это также известно как judgement стрелка представлять один шаг вычисление если вы встретиться то это значит после многократный применение одношаговый вычисление в конечный итог переш литр в в семантика с больший шагом использоваться другой стрелка так что означать что термы в результат вычисление переш литр в если в один и тот же язык использоваться семантика с малое шагом и семантика с больший шагом то и означать один и то же согласно конвенция правило именоваться прописной буква и если вы повезти том то автор добавить к правило вычисление префикс e как дополнительный подсказка например if true then t else t t e iftrue обычно правило вычисление задавать в стиль правило вывод inference rules пример e if это следовать читать как с уч тот указанный в делитель мы мочь сделать вывод о тот что находиться в знаменатель то есть в дать конкретный пример если выводиться в то в это случай выводиться в в язык программирование не обязательно должный быть определ нный система тип он мочь быть нетипизировать но у большинство она есть двоеточие использоваться для указание что данный термы принадлежать определ нном тип например термы считаться корректно типизировать или типизировать если существовать такой тип для который верно выражение как у мы быть правило вычисление так здесь иметься правило типизация они тоже часто определяться в стиль правило вывод а они название мочь начинаться с префикс t например t if такой следовать читать как поскольку термы 1 принадлежать тип bool а термы 2 и 3 принадлежать тип t то термы if term 1 then term 2 else term 3 быть принадлежать тип t в функция лямбда абстракция мы тоже следить за тип аргумент и возвращать значение можно аннотировать связанный переменный указать они тип так что вместо простой можно написать тип лямбда абстракция для функция с один аргумент записываться как это означать что функция принимать аргумент тип и возвращать результат тип в правило вывод вы увидеть знак выводимость оператор в вид турникет значит следовать читать как из p можно вывести q или как p подразумевать q например означать из тот факт что x принадлежать тип t1 следовать что тип t2 принадлежать тип t2 следовать отслеживать привязка переменный к для свободный переменный в функция для это мы использовать окружение типизация представить он как знакомый вы окружение который транслировать название переменный в значение но только здесь мы транслировать название переменный в тип согласно конвенция для указание контекст типизация использоваться символ гамма он часто встречаться в научный статья без объяснение по конвенция я запомнить он значение представить виселица фиксировать переменный с они тип свисать на вера вке но у вы мочь быть и другой способ это приводить к часто встречать тройственный соотношение в вид он следовать читать так из контекст типизация следовать что термы t принадлежать тип t оператор в вид запятая расширять путы метр добавление новый привязка справа например объединить это вс вы получать правило который выглядеть как это в дать случай для определение тип лямбда абстракция расшифровать правило если то что указать в числитель из контекст типизация с ограничение x до t1 следовать что t2 принадлежать тип t2 то часть указанный в знаменатель в тот же контекст типизация выражение принадлежать тип если бы джейн остин писать книга о система тип наверное она бы назвать е продвижение и сохранение на самый дело я думать что можно написать много интересный эссе с такой название система тип считаться безопасный типобезопасный если правильно типизировать термы никогда не оказываться в тупик в процесс вычисление на практика это означать что в цепочка правило вывод мы никогда не застрять где то без окончательный значение и в то же время без возможность применить правило для дальнейший продвижение вы увидеть что автор употреблять фраза застрять и оказаться в тупик именно это они иметь в вид для демонстрация что правильно типизировать термы никогда не оказаться в тупик достаточно доказать теорема продвижение и сохранение иногда вы увидеть что автор говорят о продвижение и сохранение не указывать явно почему это важный теперь вы знаете почему вот ещ пара вещий который вы мочь встретиться и о который интересно знать на самый дело я просто заинтересовать посторонний лицо который наблюдать за тем что происходить в сообщество если вы читать это в качество эксперт по язык программирование и знаете большой вещий который следовать включить в шпаргалка практиковать специалист пожалуйста сообщить в комментариях

