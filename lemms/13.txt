почему не стоить использовать двухуровневый архитектура при разработка клиент серверный приложение hackerook поблагодарить мой знакомый за то что он рассказать я о свой новый лабораторный работа в университет по дисциплина связанный с база дать в противный случай статья просто бы не увидеть бы свет суть дать лабораторный работа быть написать n ое количество валидация хранить процедура и триггер в ms sql весь триггера валидация и хранить процедура очень простой но это лишь один лабораторный и далёкий быть худой быть многоэтажный sql запрос и хранить процедура очень большой объ ма как я кажется тратить время на изучение подобный вещий в 2018 год очень не практично а именно то что никто не использовать просто голый база дать и сразу вывод на клиент весь приложение иметь бизнес логика и подвергаться постоянный масштабирование и изменение и завязывать вс на база дать не правильно так как мочь возникнуть ряд проблема который невозможно решить использовать лишь субд в качество серверный сторона как это выглядеть если отправлять сообщение через ms sql прекрасный код согласиться редактирование и изменение данный код быть доставлять мы неудобство а это лишь простой табличка в который нет стиль и ничто сложный просто текст а теперь представимый что мы в реальный мир и мы надо отправлять нормальный красивый сообщение с картинка вложение и стиль перейти по вы собственный глаз увидеть какой мочь быть больший html шаблон письмо и редактирование что либо подобный быть тратить тонна ваш время и сила а в случай если бы вы использовать трехуровневый архитектура вы бы не прийтись использовать столь изощр нный метод оформление письмо быть бы использовать какой либо фреймворк с шаблонизатор и дело с конец существовать множество ситуация когда мы необходимый создать в приложение возможность который база дать сам по себя просто не смочь реализовать так как в она не предусмотреть подобный к пример в ваш приложение заказчик попросить реализовать чат с отображение новый сообщение в режим реальный время подумать совсем чуть чуть вы сразу сказать что необходимый использовать websockets но прийти к такой решение вы встать в тупик так как база дать просто не поддерживать ничто подобный и вы прид тся расширять ваш приложение до трехуровневый архитектура и обеспечивать работа websockets на новый уровень разграничивать база дать и клиентский часть конечно вы мочь сказать что но поспешить вы поправить что серверный часть реализовать на более высокоуровневый система чем просто база дать упрощать вы жизнь и скорость разработка позволять более гибко выстраивать настройка под тот или иной ситуация если где то нужно воспользоваться сторонний сервис вы использовать соответствующий библиотека предоставить это самый сервис вы не нужно изобретать вечно всевозможный велосипед переписывать логика библиотека в sql если вы быть использовать клиент сервер база дать то перед вы раскрыться огромный мор возможность вс стать максимально кастомизировать и простой и такой пример тысяча если не десятка тысяча вы смочь без особый усилие реализовать в течение несколько часы то на что возможно бы вы понадобиться несколько десяток а возможно и сотня часы если бы вы использовать только голый база дать этот статья призывать вы развиваться в правильный направление и изучать более продвинуть вещий ведь с каждый год функционал приложение становиться вс более и более сложный и продвинуть сейчас современный фреймворка весь sql запрос написать за вы и не пропустить точка с запятая от вы же требоваться грамотно использовать весь тот инструмент который предоставлять фреймворк а не придумывать велосипед так же хотеться бы чтобы преподаватель вуз смотреть на реалия в который попадать студент на работа и давать реальный задача а не задача валидация мобильный телефон на уровень бд

