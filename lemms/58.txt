изучение spring framework 100 через практика активный туториал и язык разметка kml проект kcitasks beta kciray spring framework традиционно считаться один из самый и при это однако существующий подход к он изучение крайне неэффективный я хотеть бы предложить вы принципиально к изучение спринг который заключаться в использование концепция они представлять из себя сбалансированный набор инструкция который поддерживать внимание разработчик и проводить он через тот или иной аспект фреймворка в результат мы получать но без ступор проблема непонимание вид а где это использовать а также без скучный и пассивный чтение теория совсем в рамка статья представить 5 учебный задачка который покрывать на 50 от необходимый для сертификация знание главный задача статья массово протестировать сам идея а также вместе с вы разработать большой количество уникальный задачка по весь тема для начало немного о себя я звать ярослав и я работать на позиция middle java developer в компания epam systems один из мой хобби являться создание обучать система диплом бакалавр диплом магистр за последний 4 год я перепробовать более сотня самый разнообразный подход к обучение различный область знание включая java spring и создать более двадцать программа прототип для проверка этот подход большинство из они не принести какой либо супер польза и поэтому я продолжать работа в это направление этот статья посвятить один из мой идея который мочь взлететь надо е массово протестировать в это и заключаться задача дать статья забегать впереть далее рекомендовать вы зайти и посмотреть веб страница с задачка чтобы понимать о число метр ида том речь я перфекционист и хотеть чтобы обучение быть близкие к идеальный в мо метр понимание это такой обучение который не вызывать негативный эмоция затягивать и приносить удовольствие к сожаление изучение многий современный и высокооплачиваемый технология вызывать традиционно считаться один из самый сложный в изучение и он изучение происходить крайне неэффективно в изучение фреймворок есть 2 крайность один когда человек работать в компания и просто делать тот задача который да том заказчик но по он идти большинство разработчик логично делать только то что просить особенно когда за это платить не так ли однако обучение на работа лишь кажется эффективный большинство задача который решать современный программист заключаться в сопровождение система вс уже написать до мы нужно лишь фиксить баг править конфига и дорабатывать система напильник в это нет ничто плохой но вот обучение сам технология происходить крайне медленно конечно рано или поздно вы прид тся раскопать документация спринг и вы запомнить вс необходимый но на это мочь быть стоить попробовать сначала накрутить знание и опыт а потом уже брать практический задачка сложный и за существенно больший оклад разумеется с java это точно работать можно за 2 3 месяц изучить java se и это мочь засчитывать за год другой опыт много знакомый с универ кто так делать два крайность это это быстрый но очень тяж лый способ он заключаться в тот что человек продвигаться по книга или курс а потом пытаться применить это на практика и как то запомнить и если с java se такой подход ещ кой как работать то с спринг вс глухо и туго даже в самый хороший книга зачастую не объясняться где применять тот или иной особенность приходиться догонять это самый добыть такой тяж лым труд один из проблема обучение это отсутствие эффективный повторение если вы изучать спринг классический способ например читать книга и пробовать код на практика то на это быть потратить огромный усилие но без возможность восстановление простой перечитывание книга через 1 2 год не верна том вы забытый информация который вы получить через практика параллельный с прочтение возникать некий дилемма как же сделать так чтобы быть много практика но при это программист направляться в нужный область итак мы прислать к вывод что крайность в обучение это плохо давать подумать как можно оптимизировать процесс рассмотреть более подробно почему же это вызывать трудность у большинство человек для начало выбрать материал по который стоить обучаться главный требование к он ограниченный набор информация только то что нужно для сертификация собеседование практика а также последовательный и логически взаимосвязанный подача этот информация по данные критерий хороший образ подходить книга и том далее они очень хорошо продумать и оформить на мой взгляд куда приятный и дробный чем видеокурс по спринг на udemy казалось бы читать себя вникать пробовать экспериментировать и быть знание но не тут то быть дело в тот что сам какой бы ни быть книга идеальный она ост тся книга она по свой природа не предназначить для обучение программирование программист в конечный итог должный набивать хороший привычка по тот или иной технология фреймворка чтобы преодолеть е приходиться вложить немалый усилие сказать честно я написать довольно много веб приложение на spring однако вс равно испытывать множество трудность при прочтение глава книга спринг в действие на данный момент я детально разобрать около 30 из оба книга и готовый к сертификация spring 5 примерно на 60 аналогичный проблема я наблюдать при изучение android sdk в 2014 год разгадка тут довольно простой каждый фреймворк вводить какой то свой новое концепция который довольно трудно понять и начать думать через они если использовать традиционный способ обучение процесс связывание представить в книга информация с привычка очень тяж лый и не эффективный он часто вызывать множество негативный эмоция когда что то не работать или не запускаться заставлять много гуглить и решать проблема ведь опытный разработчик прекрасно знать о такой путь для они это что то очевидный но тут возникать проблема в форма передача знание как мы уже выяснить книга не подходить для этот цель ещ один проблема на который хотеться бы обратить внимание это даже если мы преодолеть весь трудность и широко прокачать знание спринг с время они быть угасать не считать тот небольшой процент который получиться связать с текущий задача человек свойственно забывать и с это ничто не поделать единственный что мы мочь сделать это попробовать оптимизировать повторение когда я учиться в бакалавриат я возлагать большой надежда на теория интервальный повторение и хранение знание в вид флёша карта однако флёша карта слишком независимый друг от друг не подходить для хранение связанный знание о спринг даже для изучение java они эффективность средний да и они тоже не естественный ведь программист должный я многие год ломать голова над тем как сделать обучение 100 завязать на практика сейчас я коротко рассказать о вариант который быть перепробовать для начало я пытаться найти набор который бы кроме задача давать бы технический наводка разработать такой то rest api использовать такой то класс ничто дельный я не наш литр и потратить куча время да я видеть отдельный авторский курс по некоторые часть спринг но полный покрытие сертификация нигде не собрать да и книжный проблема этот туториал ост тся хоть и некоторый автор пытаться сделать пошаговый руководство они вс равно иметь недостаток p s если у вы есть что то вроде учебный тз по спринг обязательно отправить они я на kciray8 gmail com это ещ больной чем гуглить баг я не хотеть читать я хотеть кодить а потом уже самостоятельно через эксперимент и гугл догонять вс остальной а уже потом и глава перечитывать пересиливать себя и собирать остаться крупица знание собственно я так и изучать спринг не с начало глава унылый введение а с середина пытаться за что то ухватиться и экспериментировать вокруг это я даже развить ряд особый методика вокруг это метод но там вс равно оставаться некоторый фундаментальный проблема а именно проблема ступор никуда не деваться она вызывать по прежний много боль хоть это уже более естественно и приближенно к практика в реальный проект прид тся много такой ступор решать прокачать навык быть полезно да и проблема повторение информация вс равно ост тся и хотеться сделать что то более приблизить к идеальный вдруг мой новый методика оказаться полезный большой количество человек и изменить мир и в конец 2017 год я пришлый в голова такой идея да так что захотеться е сразу реализовать и изначально я делать очень большой ставка на успех давать подумать как происходить обучение по классический больший частью пассивный туториал включая гайда на spring io самый большой они недостаток который я просто терпеть не мочь это линейность многие автор вываливать большой кусок код который нужно копипастить к себя быть бы правильный начинать с простой пример минимально возможный демонстрация который можно запустить и поэкспериментировать и потом накручивать на он разный наворот но нет ведь каждый автор считать нужный накрутить информация в 2 4 раз большой чем нужно по кусок это разбирать и только потом запускать к пример открыть руководство по поднятие soap сервис на спринг недавно на работа понадобиться они тут и spring boot прикрутить и wsdl4j с процесс генерация java класс с использование gradle и целый in memory репозиторий countryrepository хотя простой строка hello world я хватить бы и только в самый конец объяснить как с помощь curl запустить весь этот система нет я конечно вс понимать автор хотеть дать наглядный пример вс в один и разобрать он но с точка зрение информация такой подход не годиться вы любить читать скучный разбор и копипастить кусок код каждый по половина страница я это терпеть не мочь хотеть вот получать опыт экспериментальный путы метр и вс тут что если сделать некий подобие виртуальный учитель который просто да том маленькая указание тип то и это а в случай если программист ошибиться или забыть учитель просто да том фрагмент код по свой суть кси таска и являться таковой быть они в тот что у мы есть маленький набор инструкция к каждый из который есть ответ и он под спойлер скрытый разница между они и обычный туториал можно увидеть на следующий графика перед тем как продолжить разбор активный туториал хотеться бы рассказать о один важный концепция на который они базироваться этот концепция вы мочь использовать совместно с люба методика обучение но почему то о она редко писать или упоминать где то так вот быть е в тот что никакой start spring io каждый день заходить в и на наш метр базировать весь ваш проект включая веб и весь maven зависимость тоже забивать по новый благодаря это вы запомнить зависимость между спринг модуль зачем нужный каждый из они и том далее на практика это очень сильно пригождаться когда есть какой то проблема с зависимость любить ли вы xml автор оба книга по spring соглашаться что рано или поздно xml стать пережиток прошлое однако они сам приводить большинство решение в два вариант xml аннотация я не любить xml до тот пора пока не устроиться в большой компания сейчас это просто часть работа слишком много готовый решение сделать который просто пронизать xml и переписать они без он потратить огромный деньга и получить несравнимый мало никто не быть это делать поэтому если правильно обучаться по описать в статья методика то xml не вызывать проблема а напротив помогать взглянуть с другой сторона на некоторый решение и хороший они запомнить написание xml код с автозаполнение и подсказка с помощь ide также приятно как и написание java код каждый инструкция в активный туториал должный быть выполнимый без копипаста современный ide позволять умножить е на ноль да даже с весь он приблуд даже вс можно сделать внутри ide это чем бездумно копировать код как я уже сказать я хотеть сделать обучение приятный и это один из проявление в кси таска заставлять вы немножко подумать и что то вспомнить в это и заключаться активность такой туториал этот процесс намного приятный чем чтение или копирование код тут нужно поддерживать баланс инструкция не должный быть слишком тупой иначе это быть не так приятно и не должный быть слишком сложный что повлечь за себя большой кусок код и проблема аналогичный с туториал я нигде не видеть подобный разработка хоть и повидать много разный система обучение один из причина по который активный туториал до сей пора никто не распространить отсутствие формат для они хранение один версия kcitasks я сделать как надстройка на html и это быть просто ужас как неудобно потом я сделать свой небольшой язык разметка который отличный образ подходить для таска и компилироваться в html и происходить это прямо в время загрузка веб страница вот пример в интернет существовать холивар о тот нужный ли сертификат о это можно написать отдельный статья но в рамка этот статья я просто написать месяц назад выйти study guide по spring 5 и поэтому иметь смысл ориентироваться на он для мы это мочь служить в качество или некоторый стандартный набор который спрашивать на собеседование и который мочь быть полезный для ваш проект по каждый тема нужно сделать 6 8 уникальный задачка который затрагивать требовать объ метр знание и подавать информация с разный точка зрение например созд тся разный способ с помощь билдёр вручную с использование проперть через аннотация или xml автоматически через boot и том далее потренироваться программист над жно запомнить что же такой и как он применяться вместо тот чтобы как делать многие кроме тот тема часто взаимно пересекаться container и aop использоваться в spring data это позволять очень хорошо углубить основа основа не смотреть на максимальный автоматизация процесс через язык разметка особенно если они делать качественно демонстрировать вс в простой форма и с правильный перспектива например я потребоваться около 10 часы чтобы разработать задачка по уровень изоляция в транзакция казалось бы нужно всего лишь продемонстрировать разница между 4 мя уровень запустить транзакция параллельно но не тут то быть для h2 и mysql не видный разница между некоторый уровень и они по разный обрабатывать конфликтный ситуация один бд возвращать старое копия дать другой вводить транзация в режим ожидание и только в derbydb наглядно можно увидеть разница между весь уровень весь автор книга такой умный копировать теория а вот показать е на практика полноценный пример так и не получиться найти прийтись самый выводить быть мой план в тот чтобы по spring 5 весь что требоваться от вы это отправить я на почта kml файлик с задачка и zip архив проект задачка быть доступный бесплатно и без регистрация для весь через или вы мочь сделать если нужно что то доработать в самый движок я верить что вместе мы смочь создать новый принцип обучение и нести он в масса также хотеть обратить внимание на просьба поддержать проект в вид донат в шапка сайт баннер очень хотеться бы получить компенсация по затратить усилие а сообщество java разработчик далеко не бедный по каждый тема спринг можно придумать множество уникальный таска например вы мочь давать указание по разработка некоторый через спринг а потом получать дать с он через и выводить они в консоль получаться 2 в 1 некоторый замкнутый кольцо вообще простор для творчество тут очень большой нужно лишь время и желание и чем большой уникальный задачка тем хороший если вы хотеть добавить что то сво необычный впереть далее многогранность обучение очень важный нужно показать один и тот же знание с большой количество разный ракурс тогда они хорошо запомниться главный соблюдать баланс о который говориться выше каждый инструкция требовать что то сделать но не слишком много вместе мы смочь конвертировать знание из книга в форма таска и сделать большой дело p s если кто то из читатель проходить экзамен и или официальный курс от pivotal написать я на kciray8 gmail com я видеть два путь по который вы мочь использовать kcitasks один использовать е для углубла нный спринг на мой взгляд это должный быть эффективно вы просто выполнять инструкция за инструкция сверяться с решение и корректировать себя по начало вы быть много подглядывать туда но это нормальный на следующий день попробовать подглядывать как можно маленький и вс делать самый весь таска рассчитать на то чтобы быть сделать без разворачивание спойлер совсем вы надо к это прийти таска самодостаточный просто вчитваться в инструкция и решение к она и два путь использовать kcitasks для когда вы изучать какой либо фрейм или язык программирование по книга курс вы вкладывать много усилие и пусть они не пропасть даром вложить весь получить опыт в таска чтобы потом через полгода можно быть пройти по проторить дорожка и вс вспомнить оба путить не протестировать beta же поэтому ждать ваш отзыв и чем дробный тем хороший ведь весь человек разный восприятие разный и надо посмотреть реакция сообщество надеяться что статья оказаться полезной

