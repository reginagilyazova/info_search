философия sla про приоритет запрос bzq продолжать цикл стать про sla публиковать то что не уместиться в основный статья не секрет что начинать с определ нный уровень зрелость в ит компания начинать регистрировать запрос в специальный система трекер это позволять понимать кто и чем заниматься анализировать текущий ситуация и уже проделать работа и ещ масса полезный при правильный постановка дело выгода заметно перевешивать бюрократия очер дность исполнение запрос регулироваться приоритет за много много год работа в поддержка самый разный ит система я очень понравиться система из четыр х приоритет о который речь и пойда том ниже этот система настолько хорошо показать себя на практика в самый разный проект что я искренне удивляться встречаться с другой подход к приоритет так что я готовый приложить определ нной количество усилие для популяризация такой определение приоритет чтобы они чаща весь использоваться и чаща встречаться в жизнь если у вы отсутствовать специальный причина который вы готовый внятно сформулировать письменно то в поддержка ит система использовать следующий приоритет этот приоритет должный правильно пониматься и использоваться весь сотрудник ит компания вовлечий нный в процесс сопровождение для приоритет должный ставиться автоматически на основание указанный они свойство запрос основать на уместный но по возможность объективный свойство например на критичность и степень влияние при это для конкретный система критичность мочь быть указать тут же например для erp система это мочь быть диапазон ожидаться потеря свыше 100 миллион от 1 до 100 миллион до 1 миллион уместный мочь оказаться использование модификатор вид задействовать vip персона повышать или понижать приоритет матрица соответствие должный оставаться простой и прозрачный но не позволять ставить высокий приоритет необоснованно причина такой кажущийся дискриминация рассматриваться ниже далёкий о это более детально и обстоятельно когда мы сам писать регламент мы сам устанавливать правило игра и иметь смысл установить такой правило не аба как а чтобы быть максимально удобно и эффективно это вопрос опыт но начинать плясать от что то надо далёкий уже дотачивать по место давать поговорить о тот как определять приоритет начн метр как обычно с главный с ответ на вопрос зачем это нужно приоритет мы нужный для тот чтобы выделять из общий масса запрос тот по который мы хотеть более активный действие такой образ мы смочь удобно иметь 3 5 приоритет обычно это хватать на весь случай жизнь другой количество приоритет являться скорее экзотика чтобы приоритет правильно работать запрос более высокий приоритет должный быть в 5 10 раз маленький чем предыдущий получаться эдакий характерный лесенка сантиметр рис и тогда запрос с более высокий приоритет в сила свой экзотичность привлечий том к себя естественный внимание и не затеряться в общий масса запрос конкретный исполнитель предполагаться что при нормальный загрузка на каждый исполнитель в среднее висеть 5 15 открытый запрос и половина из они требовать действие от кто то ещ тогда с повышенный приоритет у каждый исполнитель оказаться в среднее не более чем 1 2 запрос и совершенно понятно с какой конец нужно браться за работа также хотеться бы иметь такой приоритет который логичный и хорошо пониматься весь участник процесс потому что изменение приоритет слишком сильно мочь поменять целевой метрика работа и если один из сторона не согласный то получиться конфликт что хотеться бы избежать изменение приоритет должный происходить при изменение масштаб решать проблема или при появление новый информация который существенно менять начальный постановка задача по мой многолетний опыт очень удобный являться система из четыр х приоритет я они уже приводить в статья ну и в начало этот статья это три основный приоритет низкий средний высокий и один экстраординарный высокий для тот самый случай когда весь вс бросать и начинать заниматься только этот проблема до победный конец такой система приоритет являться довольно таки интуитивно понятный маленький тр х регулярный приоритет использовать нехорошо плохо масштабироваться большой тр х уже не особо нужно да и окк не велеть остаться обосновать определение приоритет сделать это можно разный способ можно просто определить никак не обосновывать можно и обосновать не претендовать на всеобщность я привести один из подход интересный он только тем что он можно повторить для другой специфический условие подход быть такой быть придумывать критерий который позволить из общий масса запрос выделить тот который требовать более пристальный внимание потом из этот отобрать выбирать тот который требовать ещ более пристальный внимание ход мысль надеяться понятный а далёкий из этот критерий и сделать определение приоритет чтобы определение быть ясный быть стараться каждый раз выбрать такой критерий чтобы он быть максимально простой и понятный сразу отметить что по умолчание запрос должный всегда открываться с самый низкий приоритет а более высокий приоритет должный быть обосновать в запрос иначе желаемый лесенка не получиться требование письменно обосновать повышенный приоритет являться важный так как заставлять инициатор запрос задать себя вопрос так ли в самый дело критичный проблема попробовать сам и пойма тот что это очень хороший фильтр верна мся к деление на приоритет перво наперво поделить весь запрос на важный и неважный весь неважный безжалостно закрывать теперь у мы весь запрос важный выделить из они срочный и критичный потому что не всякая важный проблема обязать быть срочный или критичный как раз наоборот критичный или срочный проблема появляться не так уж и часто если вы почему то кажется что весь проблема срочный и критичный то просто попытаться письменно сформулировать в число метр важность и критичность каждый вот тот для который не приходиться натужно придумывать причина важность или брать нахрапом сам что ли не понимать это же очень критично тот и быть критичный теперь из срочный и критичный выбрать тот у который нет обходный путь решение проблема да не так уж и редко бывать так что с конкретный ситуация вполне можно справиться без решение исходный проблема посчитать рука на бумажка собрать отч том в экселе провести ручной операция вместо штатный и том плата это вс обходный путь никто не спорить что так делать неудобно и что решать проблема надо ибо зачем нужный ит система если она не работать но при наличие обходный путь можно потратить на решение большой время поэтому если обходный путь существовать то имя надо сразу пользоваться пока исполнитель пытаться решить проблема в общий вид инициатор сразу не терять время приступать к использование обходный путь а если инициатор мочь себя позволить подождать решение проблема то проблема скорее всего не такой уж важный или срочный за который он пытаться е выдать можно понижать приоритет верна мся обратно к приоритет нужно ли выделять в отдельный приоритет что то ещ более важный да вроде бы уже и не нужно далёкий только аврал такой образ у мы получиться разбить весь запрос на класс прич метр каждый следующий класс запрос более редкий и требовать более пристальный внимание и более быстрый реагирование что и хотеться ну и конечно сверхприоритет последний приоритет обычно выделяться из общий ряд по тот причина что по он работать в круглосуточный режим в отличие от весь предыдущий по который работа веда тся в рабочий время при соблюдение принцип паритет нужность этот приоритет даже определять особо не нужно никто в здравый смысл не стать инициировать круглосуточный режим если в самый дело не припр том итого получиться четыре понятный приоритет формулировка определение на канцелярит чтобы можно быть взять в свой регламент и исправить по место сантиметр в табличка выше название можно взять предложить я а можно нейтральный числовой один самый высокий два три и четво ртый а то бывать что у кто то рука не подниматься открывать запрос с приоритет который называться низкий я например привыкнуть пользоваться оба вс вышесказанный про приоритет относиться к тем человек который заниматься технический поддержка по долг служба сотрудник служба поддержка должный ориентироваться в общий картина по it и уметь выставлять приоритет объективно и единообразный в соответствие с внутренний регламент пользователь же it система от бизнес хороший не давать возможность выбирать приоритет а выставлять он автоматически хороший приближение являться диагональный матрица влияние и критичность из классический определение приоритет itil пример уже быть приведа наш выше почему так дело не в недоверие пользователь мол сирый они и убогий просто для пользователь ит система любой проблема который мешать лично он всегда быть самый высокий приоритет потому что мешать он выполнять он собственный работа прич метр вот прямо сейчас мешать и ведь как всегда невовремя сломаться именно тогда когда нужно быть иначе пользователь бы в система не полезть и тем более в служба поддержка бы не обращаться у он и так есть чем заняться из свой непосредственный служебный обязанность если бы у он быть много запрос то вот в они приоритет он бы мочь и расставить но у пользователь в большинство случай есть всего один запрос в поддержка и общий картина по it он неизвестный да и неинтересный в отличие от сотрудник служба поддержка а ещ обычный пользователь обращаться в служба поддержка нечасто и даже стараться быть объективный мочь просто неправильно оформить запрос указать не тот приоритет а то и вовсе он не указать или указать на всякий случай приоритет высокий уж ошибаться так хороший в свой сторона ну и так далее поэтому пользователь быть ставить какой угодный приоритет только не тот который должный быть и нет никакой разумный сила который заставить бы они выставлять правильный приоритет так что хороший и не давать имя возможность ошибаться пусть хороший заполнить пара обязательный аттрибут в запрос и на выход быть что то довольно неплохо смахивать на приоритет

