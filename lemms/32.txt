анимация в android по полочка часть 2 комплексный анимация juztoss часть 4 анимация переход часть 5 библиотека для работа с анимация приведа нный в предыдущий часть инструмент быть относительно низкоуровневый и в android есть куда более простой способ добиться красивый анимация не прибегать к прямой рисование графика или изменение свойство объект в этот часть мы рассмотреть как можно минимум усилие получить красивый анимация вс что мы нужно сделать чтобы добиться анимация как на гифка выше это добавить флаг в наш viewgroup в xml теперь когда мы удалять или добавлять элемент в наш контейнер либо изменять он свойство они автоматически быть анимировать ладный я немного слукавить когда говорить что чтобы получить анимация как на гифка выше нужно всего лишь установить флаг добавление на самый дело устанавливать наш viewgroup но layouttransition по умолчание анимировать только изменение видимость объект в лэйаут поэтому если мы хотеть изменять свойство объект например ширина и высота нужно включить этот опция отдельно теперь точно вс если захотеться как то кастомизировать это поведение то у есть метод позволять задать свой собственный анимация изменение ну самый хардкорный ребята всегда мочь написать свой применение базовый анимация изменение объект на сцена достоинство минимальный трудозатрата недостаток слабый кастомизация начинать с api 19 в android появиться новый фреймворк позволять создавать сложный анимация с участие большой количество элемент и минимум код есть два основный вариант он использование чтобы создать анимация необходимый перед внесение изменение в наш view вызвать transitionmanager begindelayedtransition viewgroup и передать в он viewgroup который мы хотеть анимировать фрэймворк запомнить состояние view и запустить анимация на следующий кадр создание анимация в это случай сводиться к создание два похожий xml отвечать за начальный и конечный состояние ваш анимация соответственно id объект в xml должный совпадать чтобы дать фреймворка возможность найти соответствие на самый дело тоже созд том сцена один в момент вызов а два на следующий кадр после что запускать анимация между они кастомизация в transitions framework достигаться за сч том передача объект transition второе параметр по умолчание использоваться так что код ниже быть работать абсолютно так же как и код выше или и если заглянуть внутрь можно заметить что анимация быть происходить в в следующий порядок анимироваться исчезать объект анимироваться изменение размер анимироваться появляться объект применение анимация большой количество объект достоинство минимальный трудозатрата доступный кастомизация весь пример можно

