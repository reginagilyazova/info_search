Скрипт добавления пакетов обновления в образ Windows
Ostan
Эта статья является логическим продолжением моей   статьи. Развивая тему добавления (установки/интеграции) пакетов обновлений в образ Windows Я решил написать скрипт оперирующий командами  , который автоматизирует процесс и избавляет системных администраторов от рутинных действий.   скрипта состоит в том, что с его помощью можно установить пакеты обновления на «живую» систему, либо интегрировать в образ Windows — файл  .   скрипта состоит в том, что его работу можно настроить изменив значение нескольких переменных в начале всего кода. 
 
Как и в предыдущей статье, для примера, мы будем добавлять к образу Windows так называемое   (KB3125574), а также необходимое   (KB3177467). В ходе работы над скриптом выяснилось, что после интеграции в образ KB3177467, он (образ —  ), становится непригодным для дальнейших интеграций. Если устанавливать KB3177467 на «живую» ОС то проблем не возникает. У данной проблемы есть два решения: 1) интегрировать KB3177467 последним 2) заменить «проблемное» обновление его предыдущей версией — KB3020369. Я выбрал второй вариант, реализовав в скрипте ветвление по условию. 
 
 
 
 
 
Как уже отмечалось, скрипт может установить обновления или интегрировать их. Если в папке запуска отсутствует файл образа —  , то скрипт выполняет установку обновлений в полностью автоматическом режиме. Если в папке запуска присутствует файл образа —  , то скрипт выполняет считывание из него информацию об имеющихся «индексах» и предлагает ввести номер. После этого отображается расширенная информация о выбранном «индексе» выдаётся запрос на монтирование. Нажатие любой клавиши приводит к возврату, а нажатие клавиши [m] запускает следующую цепочку действий: монтирование образа, интеграция обновлений, размонтирование образа, возврат в меню выбора «индеска». После чего можно выбрать другой «индекс» для интеграции обновлений. Выбор «индекса» под номером 0 запускает установку обновлений на «живую» ОС. 
 
 
Вначале командой   происходит установка переменных. Можно изменить предполагаемое имя файла образа   (например, на  ). Можно изменить имя папки монтирования или задать путь, если папка монтирования должна находится за пределами папки запуска. Можно изменить «уровень» логирования, для исключения информационных сообщений из файла лога системы  . 
 
 
Предварительное меню. Получение основной информации о  -файле с контролем ошибок. Если ошибка 2 — отсутствует  -файл, то запуск в режиме Online. Не нашел информацию о максимальном количестве «индексов» в одном образе и установил значение 24. 
 
 
Индексное меню. Получение расширенной информации о выбранном «индексе» в  -файле с контролем ошибок. Предложение смонтировать «индекс». 
 
 
Определение разрядности ОС. Для интерактивного обслуживания считываются системные переменные среды, а для автономного обслуживания из образа запрашивается необходимая информация и в ней ищется ключевая строка. 
 
 
Добавление пакетов. Чтобы не делать лишней работы вначале происходит запрос списка уже добавленных (установленных или интегрированных) пакетов, а потом перед каждой командой запуска осуществляется вызов псевдофункции для проверки. 
 
 
Псевдофункция проверки. Работа описана в статье  . Код слегка подправлен. 
 
 
Монтирование образа. Предварительно создаётся папка монтирования. Контроль ошибок. Изменяется переменная определяющая спецификацию образа, теперь указывает на путь к автономному образу. 
 
 
Размонтирование образа. Если выполнялось интерактивное обслуживание (/Online), то размонтировать не нужно. Возвращение переменных к исходным значениям. 
 
 
Работа данного скрипта тестировалась на ОС Windows 7 со встроенной утилитой   версии 6.1.7600.16385. В версиях ОС Windows 8, 8.1, 10 утилита   системы   имеет более высокую версию. Думаю, обратная совместимость сохранена, и скрипт будет также работоспособен. К тому же появится возможность работать с  -файлами.
