Мобильные устройства изнутри. Структура образов разделов, содержащих файловую систему. Часть 2
vin2809

Начало публикации читайте в  
 
 
 
Т.к.  -файл, хоть и представляет собой сжатый исходный файл данных, тоже может иметь достаточно большой размер, то появилась его модификация, получившая название файлов типа  , которая представляет собой тот же  -файл, но разрезанный на части меньшего размера на основе заранее выбранной границы (по алгоритму разрезания файлов). 
 
Это дополнение позволяет использовать сжатые  -файлы для передачи обновлений по ОТА или загрузке в режиме  . 
 
 
По структуре каждый файл типа   представляет собой обычный  -файл, но содержащий не весь, а только часть входного файла, например, образа раздела. Размер этой части в сжатом состоянии, т.е. в  -виде, не должен превышать заранее заданного значения или границы. В настоящее время «граница» размера  -файла, составляет, как правило, 256Мб (268 435 456 байт). 
 
Следующая часть  -файла содержится в следующем  -файле и т.д. 
 
Внешне эти файлы различаются индексом в названии, который и определяет последовательность их обработки при декодировании. Индекс может быть просто порядковым числительным или может быть представлен как смещение во входном файле до куска. 
 
Т.о. сначала образ раздела кодируется в  -файл, а затем уже преобразовывается (разрезается) в набор  -файлов. 
 
Процесс создания  -файла можно описать следующим алгоритмом: 
 
 
Таким образом, каждый  -файл может состоять из трех частей, которые я назвал: 
 
 
Часть   представляет собой смещение во входном файле до начала части «данные», содержащей информацию в sparse виде. 
 
Часть   содержит только информацию в sparse виде, состоящую из  -кусков типа   и  . 
 
Часть   представляет собой смещение до конца выходного файла. Если смещение равно нулю, т.е. рассматриваемый  -файл, содержащий инфо-группу, является последним в наборе  -файлов, то часть   вообще отсутствует. 
 
 
В качестве примера работы с _sparsechunk-файлами давайте рассмотрим конвертацию  -файлов в  -файл и обратно на примере набора файлов system.img_sparsechunk.0 — system.img_sparsechunk.4 прошивки от Moto X  . 
 
 
Выше я показал, что при конвертации в  -файлы содержимое исходного  -файла просто делится на инфо-части, которые, при необходимости, оборачиваются дополнительными кусками. Соответственно, для восстановления исходного sparse-файла нужно от каждого  -файла отбросить куски-обертки, при их наличии, и просто сложить вместе все инфо-части, подсчитав общее число  -кусков. 
 
 
Все, сборка  -файла из кусков завершена. 
 
 
Попробуем теперь разрезать созданный  -файл на  -файлы. В качестве значения границы примем 256МБ (0х10000000). 
 
 
Все, процесс разрезания на  -части завершен. 
 
 
 
 -файл представляет собой следующую ступень сжатия образов разделов. В отличие от  -файла он содержит только информационные части. А для обеспечения сборки исходного файла создается файл, называемый  . 
 
При этом исходный файл делится на части, содержащие полезную информацию, т.е. инфо-блоки, и «пустые» блоки, т.е. содержащие нули. Затем все части с информацией копируются подряд в выходной файл, называемый  , а информация об их размещении в исходном файле и размер этих частей заносится в файл  . 
 
Таким образом, конечный файл с информацией ( ) не содержит блоков с нулями, т.е. «сжимается», становясь гораздо меньше по размеру, чем исходный. 
 
Возможности такого преобразования данных и, соответственно, формат файла   со временем претерпели некоторые изменения. Существует несколько версий этого файла. 
 
Первоначально файл   содержал все инфо-блоки, а в   заносилась информация, необходимая только для «разжатия», т.е. для восстановления полного исходного файла. Это была версия 1, которая используется для сжатия файлов в ОС Android, начиная с версии 5.0.0. 
 
Затем, кроме простого сжатия, в функции   и  -файлов добавилась возможность создавать файлы-патчи для замены только некоторых частей исходного файла, например, патч для recovery, так появилась версия 2, используемая в ОС Android, начиная с версии 5.1.0. Это привело к еще большему сжатию исходных образов, т.к. в патче передаются вообще только изменения. 
 
В ОС Android 6.0 сильно изменился подход к системе безопасности, повсеместно используется шифрование, соответственно на свет появилась версия 3 файла  , позволяющая выполнять дешифрование на лету при помощи  -команд. 
 
 
Образ файла RAW-формата (.img) после преобразования в dat-файлы (.dat) представляет собой набор из следующих файлов: 
 
 
В зависимости от типа преобразования, выполненного над исходным файлом RAW-формата, состав набора файлов может изменяется, но  -файл должен присутствовать всегда, тогда как  -файл и  -файл могут быть как вместе, так и поодиночке. 
 
Если преобразование состояло в простом удалении «пустых» блоков, то в набор помимо  -файла включается только  -файл, например,  . 
 
Если преобразование состояло в применении patch, т.е. замене части блоков на другие, то в наборе будет присутствовать только  -файл, например,  . 
 
Если преобразование состояло как из удаления «пустых» блоков, так и в применении patch, т.е. замене части блоков на другие, то в наборе будут присутствовать как  -файл, так и  -файл, например,  . 
 
Рассмотрим строение каждого из  -файлов подробнее и начнем с  -файла, используемого всегда, т.к. именно он описывает преобразования, выполненные над исходным файлом и, соответственно, действия, которые необходимо выполнить для «получения» исходного файла. Я не сказал «восстановления», т.к. строго говоря, исходный файл, подвергшийся преобразованию, может не совпадать с конечным, полученным после обработки. Это может происходить, например, после применения патча, т.е. внесения изменений в исходный файл. 
 
 
Файл   представляет собой набор строк количеством более 4, каждая строка описывает одно поле данных, и имеет следующее строение: 
 
 
Поле-строка   описывает версию файла   и может принимать значения от 1 до 3. Версии файлов различаются возможностями, что сказывается на числе строк самого файла. Версия 1 используется для файлов, созданных для Android версии не выше 5.0. Версия 2 используется, начиная с Android 5.1.0. Версия 3 используется, начиная с Android 6.0.1. 
 
Версия 1 не содержит значения, описанные строками 3 и 4, но должна содержать не менее 2 команд. Поэтому длина  -файла составляет не менее 4 строк: 
 
 
Версии 2 и 3 уже могут выполнять  -команды, поэтому  -файл будет содержать, как минимум, 6 строк: 
 
 
Поле-строка   описывает размер в блоках выходного файла  , содержащего только инфо-блоки, т.е. число блоков перемещаемых данных. По-умолчанию размер блока равен 4096 байт. 
 
Поле-строка   описывает число входов  -таблицы, содержащей набор смещений до частей исходного файла одновременно используемых при команде  . 
 
Поле-строка   описывает максимальный размер такой  -части исходного файла. 
 
Поле-строка   содержит команду, которую необходимо выполнить для получения конечного файла. 
 
Вот пример  -файла версии 1: 
 
 
где в первой строке указана версия файла (1), во второй размер перемещаемых данных, т.е. размер файла   в блоках (140333). Третья и четвертая строки содержат команды (  и  ). Эти строки приведены урезанными, т.к. имеют слишком большую длину. 
 
А вот как выглядит   версии 2: 
 
 
где в первой строке опять номер версии, во второй размер перемещаемых данных. 3 и 4 строки равны 0, т.е.  -таблица не используется. В строках с 5 и по последнюю расположены команды  ,   и  . Некоторые строки урезаны, т.к. имеют слишком большую длину. 
 
Перейдем к рассмотрению строения  -файла. 
 
 
Этот файл содержит только инфо-блоки кода исходного img-файла, взятые из него во время выполнения обработки. Они располагаются строго по-порядку, без промежутков и используются в качестве источника данных для команды  . 
 
Давайте рассмотрим строение  -файла на конкретном примере. ОТА-прошивка МУ А7010а40 [6] имеет в своем составе файлы   и  . 
 
В последнем файле команда   встречается три раза, в строках 1901, 1945 и 1946. Т.к. выполнение команд осуществляется строго последовательно, то выполнение нервой команды   в строке 1901 
 
 
приведет к чтению из  -файла первых 103 блоков, начиная с текущего положения указателя чтения, т.е. с 0, и записи в выходной файл 103 блоков в диапазон [226365,226468]. При этом указатель чтения источника будет перемещен на адрес 103. Выполнение следующей команды в строке 1945 
 
 
приведет к чтению из  -файла следующего 1 блока, начиная с текущего положения указателя чтения, т.е. с 103, и записи в выходной файл 1 блока в диапазон [294901,294902]. При этом указатель чтения источника будет перемещен на адрес 104. Выполнение следующей команды в строке 1946 
 
 
приведет к чтению из  -файла следующего 1 блока, начиная с текущего положения указателя чтения, т.е. с 104, и записи в выходной файл 1 блока в диапазон [294902,294903]. При этом указатель чтения источника будет перемещен на адрес 105. 
 
Таким образом,  -файл должен содержать 105 блоков джанных, соответственно его длина должна составлять 105 * 4096 = 430080, что и есть в действительности. 
 
Перейдем теперь к рассмотрению строения  -файла. 
 
 
Все данные патча объединены в один  -файл в пакете обновления. Данные этого файла являются источником для команд bsdiff и imgdiff. 
 
 
Все структуры описывают диапазоны данных, при этом за единицу данных принято значение блока, т.е. 4096 байт. Существуют следующие структуры описания данных: 
 
 
Рассмотрим их строение по-очередно. 
 
 
Набор диапазонов   используется в командах  -файла для описания диапазонов инфо-блоков как источника, так и приемника данных. Также используется в команде   для описания диапазонов  -области сохранения. 
 
Простой диапазон данных описывается двумя значениями: указателем на первый и последний элемент диапазона, например, [23,56). При этом левая граница включена в диапазон, а правая нет. Если диапазонов несколько, то для их описания требуется набор диапазонов, содержащий еще один элемент — число диапазонов в наборе. 
 
Описание набора диапазонов независимо от версии  -файла имеет следующее строение: 
 
   
где 
 
 
Как видно, набор содержит перечисление диапазонов данных, каждое состоит из границы начала перечисления и границы конца. Причем правая граница не входит в перечисление. Длина диапазона рассчитывается следующим образом: длина = конец — начало. 
 
Например, из приведенного выше примера  -файла, посмотрим, как описаны наборы диапазонов в команде  : 
 
 
Здесь указаны два набора диапазонов: 
 
 
То, что оба диапазона содержат одинаковое число элементов, является атрибутом операции move (перемещения), т.е. 20 элементов источника будут перемещены в 20 элементов приемника. 
 
 
 -диапазон это набор инфо-блоков, предназначенный для хранения элементов данных в строго определенном месте, т.е. этот диапазон имеет не только набор элементов (от какого смещения и до какого), но и имя или указатель хранилища. 
 
Набор инфо-блоков  -диапазона имеет следующее строение: 
 
 
где 
 
Например, командная строка имеет следующий вид: 
 
 
означает, что создан один (2/2) диапазон данных, начиная со смещения 298306 до смещения 298307 (не включая его), т.е. размером в один элемент (298307-298306=1), и помечен как stash-хранилище с идентификационным номером 10. 
 
Другой пример: 
 
 
означает, что создан один (2/2) диапазон данных, начиная со смещения 295927 до смещения 295960 (не включая его), т.е. размером в 33 элемента (295960-295927=33), и помечен как stash-хранилище с идентификационным номером 11. 
 
Еще один пример: 
 
 
означает, что 3 (6/2) диапазона данных: 
 
1) начиная со смещения 247114 до смещения 247116 (не включая его), т.е. размером в 2 элемента (247116-247114=2); 
 
2) начиная со смещения 247150 до смещения 247155 (не включая его), т.е. размером в 5 элементов (247155-247150=5); 
 
3) начиная со смещения 247156 до смещения 247156 (не включая его), т.е. размером в 0 элементов (247156-247156=0), объединены и помечены вместе как  -хранилище с идентификационным номером 8. 
 
 
Для версии 1 этот набор выглядит так: 
 
   
где 
 
 
Для версии 2 и 3 этот набор может быть следующих видов: 
 
 
где 
 
 
 
В transfer_list-файле используются следующие команды: 
 
 
 
Эти команды имеют следующую структуру: 
 
   
где 
 
 
Команда   производит отметку пустых блоков, описанных структурой  . Например, выполнение команды 
 
 
из [7,  -файл, строка 2337] приведет к очистке 35 наборов блоков выходного файла с номерами [32770,32929], [32931,33443] и т.д. 
 
Команда   производит запись инфо-блоков источника, т.е.  -файла, в набор диапазонов, описанный структурой  , приемника, т.е.  -файла. Инфо-блоки из источника выбираются строго последовательно. 
 
Например, в [7,  -файл] выполнение команды в строке 1901 
 
 
приведет к чтению из  -файла, начиная с текущего положения указателя 103 блоков и записи в выходной файл в диапазон [226365,226468]. 
 
Команда   очищает указанный набор диапазонов выходного файла, т.е. заполняет его нулями. Например, выполнение команды 
 
 
приведет к очистке блока 226365 приемника. 
 
 
Эта команда производит простое копирование инфо-блоков из файла-источника, описанных структурой  , в существующий набор диапазонов выходного файла, описанный структурой  . 
 
Команда   имеет следующее строение: 
 
 
где   — набор входных данных, который различается в зависимости от версии файла  . 
 
Например, если команда имеет следующий вид: 
 
 
и это команда перемещения инфо-блоков ( ), то здесь описаны два набора диапазонов: 
 
 
 
По этим командам читаются инфо-блоки исходного файла, выполняются обновления и измененные инфо-блоки записываются в выходной файл. Команды отличаются только типом преобразований, применяемых к инфо-блокам. 
 
Обе команды имеют следующее строение: 
 
 
где 
 
 
Эта команда производит сохранение инфо-блоков в  -область. Она имеет следующее строение: 
 
 
где 
 
 
 
Эта команда очищает  -область. Она имеет следующее строение: 
 
 
где 
   —  — набор входных данных. 
 
Продолжение следует… 
 
 
Весь приведенный материал и примеры его использования представляет собой только «таблицу умножения», а не руководство к действию. Никто, конечно же, вручную не применяет патчи и не конвертирует  -файлы… Я просто описал принципы выполнения преобразований над «разреженными» файлами, к категории которых относятся, в основном, файлы, содержащие ФС. 
 
Для обработки «разреженных» файлов используют, конечно же, компьютерные программы, которых уже большое количество. Если дойдут руки, то напишу обзор существующих средств конвертации. 
 
Начиная писать публикацию, я хотел довести до пользователей только основы, так сказать, исключительно «теорию». Т.к. большая часть работ по «копанию» в исходных текстах и прошивках была выполнена мною еще в 2013-2014 годах, то в процессе работы мне пришлось существенно поработать: что-то вспоминать, что-то переосмыслить заново, да и основательно дополнить в связи с появлением новых версий Android. В следующей части я опишу примеры обработки «разреженных» файлов. 
 
Материала получилось много, статью конечно же нужно было сразу разделить на две или три части для простоты усваивания да и подготовки. Но как вышло, так вышло. Это я про то, что не судите строго, я тоже чего-то могу не знать совсем, а чего-то не учесть… Если есть вопросы, предложения — милости просим. 
 
